* Lessons 1
** Lecture: Installation and Service Configuration
We are ready to install our PostgreSQL database engine. We will talk about where
 to obtain the latest copy and configure our system for installing it. After 
installation, we will walk through the initialization of the engine and then 
how to set it for starting on boot.

[[https://www.postgresql.org/download/linux/redhat/]]

#+BEGIN_SRC  
sudo yum install postgresql95-server
sudo yum install postgresql95-contrib

sudo /usr/pgsql-9.5/bin/postgresql95-setup initdb
sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      28

sudo systemctl start postgresql-9.5

# Allows incoming connections.
sudo setsebool -P httpd_can_network_connect_db 1
setenforce 0

sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   permissive
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      28

ps aux | grep post
postgres  4038  0.0  1.5 339612 15308 ?        S    21:32   0:00 /usr/pgsql-9.5/bin/postgres -D /var/lib/pgsql/9.5/data
postgres  4039  0.0  0.1 194600  1412 ?        Ss   21:32   0:00 postgres: logger process   
postgres  4041  0.0  0.1 339612  1772 ?        Ss   21:32   0:00 postgres: checkpointer process   
postgres  4042  0.0  0.2 339612  2576 ?        Ss   21:32   0:00 postgres: writer process   
postgres  4043  0.0  0.1 339612  1552 ?        Ss   21:32   0:00 postgres: wal writer process   
postgres  4044  0.0  0.2 340044  2676 ?        Ss   21:32   0:00 postgres: autovacuum launcher process   
postgres  4045  0.0  0.1 194596  1744 ?        Ss   21:32   0:00 postgres: stats collector process   
jodie     4165  0.0  0.0 112648   964 pts/0    R+   21:42   0:00 grep --color=auto post

#+END_SRC

** Lecture: Using the Command Line Client

Now that our system is installed, configured and initialized, let's take a 
moment to verify by connecting. We will talk about the command line client, how 
to connect, how to secure our Postgres user and how to enter and exit the 
command line shell.

#+BEGIN_SRC  

[jodie@jodiemacns1 ~]$ ps aux | grep post
postgres  4038  0.0  1.5 339612 15308 ?        S    21:32   0:00 /usr/pgsql-9.5/bin/postgres -D /var/lib/pgsql/9.5/data
postgres  4039  0.0  0.1 194600  1412 ?        Ss   21:32   0:00 postgres: logger process   
postgres  4041  0.0  0.1 339612  1772 ?        Ss   21:32   0:00 postgres: checkpointer process   
postgres  4042  0.0  0.2 339612  2576 ?        Ss   21:32   0:00 postgres: writer process   
postgres  4043  0.0  0.1 339612  1552 ?        Ss   21:32   0:00 postgres: wal writer process   
postgres  4044  0.0  0.2 340044  2676 ?        Ss   21:32   0:00 postgres: autovacuum launcher process   
postgres  4045  0.0  0.1 194596  1744 ?        Ss   21:32   0:00 postgres: stats collector process   
jodie     4259  0.0  0.0 112648   964 pts/0    R+   21:47   0:00 grep --color=auto post
[jodie@jodiemacns1 ~]$ cat /etc/passwd | grep postgres
postgres:x:26:26:PostgreSQL Server:/var/lib/pgsql:/bin/bash
[jodie@jodiemacns1 ~]$ su - postgres
Password: 
Last failed login: Mon Feb 13 21:44:51 UTC 2017 on pts/0
There were 4 failed login attempts since the last successful login.

-bash-4.2$ /usr/pgsql-9.5/bin/psql 
psql (9.5.6)
Type "help" for help.

postgres=# 

postgres=# \password postgres
Enter new password: 
Enter it again: 


postgres=# CREATE EXTENSION adminpack;
CREATE EXTENSION


postgres=# \q

#+END_SRC


** Exercises
*** Exercise: Exercise: Install and Configure PostgreSQL 9.x: RHEL/CentOS
NOTE: These exercises can be completed on Linux Academy Lab Servers runniing CentOS 7 and logged in as the root user.
1. Find the PostgreSQL 9.4 repository RPM from the appropriate website and either download and install it using the appropriate package management commands or install directly from the website link.
2. Update your system after installing the repository update in Step #1, applying any necessary updates.
3. Using the appropriate package management command, install the PostgreSQL 9.4 server and associated contribed modules and utilities. Once installed, run the database initialization routine before starting the database.
4. Using the appropriate SYSTEMD service management commands, enable the PostgreSQL 9.4 server to run on system start and then start the database server.
5. Check to see if SELinux is being run in enforced mode on your system. If so, run the command to allow external HTTP DB connections to the server through SELinux configuration.
6. Become the 'postgres' user and run the 'psql' command. Once at the database prompt, set a password for the 'psql' user. 
*** Exercise: Exercise: Install and Configure PostgreSQL 9.x: Debian/Ubuntu
NOTE: These exercises can be completed on a Linux Academy Lab Server running Ubuntu 14.04 LTS, logged in as ROOT. Although the installation and configuration is identical in Debian distributions, the service management commands reflected in the solutions are specific to Ubuntu 14.04 LTS SYSVINIT.
1. A compatible PostgreSQL version is available in the default repositories. Install the PostgreSQL server from the repository along with it's associate contributed utilities.
2. Become the user 'postgres'. Run the 'psql' command and once you are at the DB prompt, run the appropriate command to set a password for the 'postgres' user in the database.
3. While at the DB command prompt, create the 'adminpack' extension in the database. Log out of the DB prompt.
4. Using the appropriate service management command, restart the PostgreSQL database.
